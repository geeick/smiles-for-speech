(()=>{var e={};e.id=9179,e.ids=[9179],e.modules={3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},7462:(e,r,s)=>{"use strict";s.d(r,{db:()=>n});var t=s(96330);let n=globalThis.prisma||new t.PrismaClient},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},13581:(e,r)=>{"use strict";r.A=function(e){return{id:"credentials",name:"Credentials",type:"credentials",credentials:{},authorize:()=>null,options:e}}},16467:(e,r,s)=>{"use strict";s.d(r,{y:()=>n});var t=s(96330);function n(e){return{createUser:({id:r,...s})=>e.user.create(a(s)),getUser:r=>e.user.findUnique({where:{id:r}}),getUserByEmail:r=>e.user.findUnique({where:{email:r}}),async getUserByAccount(r){let s=await e.account.findUnique({where:{provider_providerAccountId:r},include:{user:!0}});return s?.user??null},updateUser:({id:r,...s})=>e.user.update({where:{id:r},...a(s)}),deleteUser:r=>e.user.delete({where:{id:r}}),linkAccount:r=>e.account.create({data:r}),unlinkAccount:r=>e.account.delete({where:{provider_providerAccountId:r}}),async getSessionAndUser(r){let s=await e.session.findUnique({where:{sessionToken:r},include:{user:!0}});if(!s)return null;let{user:t,...n}=s;return{user:t,session:n}},createSession:r=>e.session.create(a(r)),updateSession:r=>e.session.update({where:{sessionToken:r.sessionToken},...a(r)}),deleteSession:r=>e.session.delete({where:{sessionToken:r}}),async createVerificationToken(r){let s=await e.verificationToken.create(a(r));return"id"in s&&s.id&&delete s.id,s},async useVerificationToken(r){try{let s=await e.verificationToken.delete({where:{identifier_token:r}});return"id"in s&&s.id&&delete s.id,s}catch(e){if(e instanceof t.Prisma.PrismaClientKnownRequestError&&"P2025"===e.code)return null;throw e}},getAccount:async(r,s)=>e.account.findFirst({where:{providerAccountId:r,provider:s}}),createAuthenticator:async r=>e.authenticator.create(a(r)),getAuthenticator:async r=>e.authenticator.findUnique({where:{credentialID:r}}),listAuthenticatorsByUserId:async r=>e.authenticator.findMany({where:{userId:r}}),updateAuthenticatorCounter:async(r,s)=>e.authenticator.update({where:{credentialID:r},data:{counter:s}})}}function a(e){let r={};for(let s in e)void 0!==e[s]&&(r[s]=e[s]);return{data:r}}},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},41098:(e,r,s)=>{"use strict";s.d(r,{N:()=>o,j:()=>u});var t=s(16467),n=s(85663),a=s(13581),i=s(7462);let o={adapter:(0,t.y)(i.db),session:{strategy:"jwt"},pages:{signIn:"/login",signOut:"/",error:"/login"},providers:[(0,a.A)({name:"credentials",credentials:{email:{label:"Email",type:"email"},password:{label:"Password",type:"password"}},async authorize(e){if(!e?.email||!e?.password)throw Error("Invalid credentials");let r=await i.db.user.findUnique({where:{email:e.email}});if(!r||!r.password)throw Error("User not found");if(!await (0,n.UD)(e.password,r.password))throw Error("Invalid password");return{id:r.id,email:r.email,name:r.name}}})],callbacks:{session:async({session:e,token:r})=>(e.user&&r.sub&&(e.user.id=r.sub),e),jwt:async({token:e,user:r})=>(r&&(e.sub=r.id),e)},secret:process.env.NEXTAUTH_SECRET},u=o},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},55511:e=>{"use strict";e.exports=require("crypto")},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},78335:()=>{},79086:(e,r,s)=>{"use strict";s.r(r),s.d(r,{patchFetch:()=>m,routeModule:()=>l,serverHooks:()=>h,workAsyncStorage:()=>p,workUnitAsyncStorage:()=>w});var t={};s.r(t),s.d(t,{GET:()=>c});var n=s(96559),a=s(48088),i=s(37719),o=s(32190),u=s(7462),d=s(41098);async function c(e,{params:r}){try{let e=await (0,d.j)();if(!e?.user?.id)return o.NextResponse.json({error:"Unauthorized"},{status:401});let s=e.user.id,t=r.id,n=await u.db.assessmentResult.findUnique({where:{id:t}});if(!n)return o.NextResponse.json({error:"Assessment not found"},{status:404});if(n.userId!==s&&n.createdBy!==s&&!await u.db.sharedAssessment.findFirst({where:{assessmentId:t,sharedWithId:s}}))return o.NextResponse.json({error:"Unauthorized access to this assessment"},{status:403});let a=n.answers?JSON.parse(n.answers):{},i=n.categories?JSON.parse(n.categories):{},c={id:n.id,userId:n.userId,createdBy:n.createdBy,assessmentType:n.assessmentType,totalScore:n.totalScore,maxPossibleScore:n.maxPossibleScore,scorePercentage:n.scorePercentage,categories:i,answers:a,date:n.date,lovedOneId:n.lovedOneId};return o.NextResponse.json(c,{status:200})}catch(e){return console.error("Error retrieving assessment:",e),o.NextResponse.json({error:"Internal server error"},{status:500})}}let l=new n.AppRouteRouteModule({definition:{kind:a.RouteKind.APP_ROUTE,page:"/api/assesements/save/[id]/route",pathname:"/api/assesements/save/[id]",filename:"route",bundlePath:"app/api/assesements/save/[id]/route"},resolvedPagePath:"/Users/georgiaeick/Downloads/smiles-for-speech/app/api/assesements/save/[id]/route.ts",nextConfigOutput:"",userland:t}),{workAsyncStorage:p,workUnitAsyncStorage:w,serverHooks:h}=l;function m(){return(0,i.patchFetch)({workAsyncStorage:p,workUnitAsyncStorage:w})}},96330:e=>{"use strict";e.exports=require("@prisma/client")},96487:()=>{}};var r=require("../../../../../webpack-runtime.js");r.C(e);var s=e=>r(r.s=e),t=r.X(0,[4243,580,5663],()=>s(79086));module.exports=t})();