(()=>{var e={};e.id=2367,e.ids=[2367],e.modules={3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},7462:(e,r,t)=>{"use strict";t.d(r,{db:()=>n});var s=t(96330);let n=globalThis.prisma||new s.PrismaClient},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},13581:(e,r)=>{"use strict";r.A=function(e){return{id:"credentials",name:"Credentials",type:"credentials",credentials:{},authorize:()=>null,options:e}}},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},55511:e=>{"use strict";e.exports=require("crypto")},58864:(e,r,t)=>{"use strict";t.r(r),t.d(r,{patchFetch:()=>m,routeModule:()=>l,serverHooks:()=>h,workAsyncStorage:()=>p,workUnitAsyncStorage:()=>w});var s={};t.r(s),t.d(s,{POST:()=>c});var n=t(96559),a=t(48088),i=t(37719),o=t(32190),u=t(7462),d=t(86730);async function c(e){try{let r=await (0,d.j)();if(!r?.user?.id)return o.NextResponse.json({error:"Unauthorized"},{status:401});let t=r.user.id,s=await e.json(),{answers:n,totalScore:a,maxPossibleScore:i,scorePercentage:c,assessmentType:l="self"}=s;if(!n||void 0===a||!i)return o.NextResponse.json({error:"Missing required assessment data"},{status:400});let p=t,w=null;"loved-one"===l&&s.lovedOneId&&(w=s.lovedOneId,p=s.lovedOneId);let h=await u.db.assessmentResult.create({data:{userId:p,createdBy:t,assessmentType:l,lovedOneId:w,answers:JSON.stringify(n),totalScore:a,maxPossibleScore:i,scorePercentage:c,categories:JSON.stringify(s.categories||{}),date:new Date}});return o.NextResponse.json({success:!0,assessmentId:h.id,scorePercentage:c},{status:201})}catch(e){return console.error("Error saving assessment:",e),o.NextResponse.json({error:"Internal server error"},{status:500})}}let l=new n.AppRouteRouteModule({definition:{kind:a.RouteKind.APP_ROUTE,page:"/api/assesements/save/route",pathname:"/api/assesements/save",filename:"route",bundlePath:"app/api/assesements/save/route"},resolvedPagePath:"/Users/georgiaeick/Downloads/smiles-for-speech/app/api/assesements/save/route.ts",nextConfigOutput:"",userland:s}),{workAsyncStorage:p,workUnitAsyncStorage:w,serverHooks:h}=l;function m(){return(0,i.patchFetch)({workAsyncStorage:p,workUnitAsyncStorage:w})}},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},78335:()=>{},86730:(e,r,t)=>{"use strict";t.d(r,{j:()=>d,N:()=>u});var s=t(96330);function n(e){let r={};for(let t in e)void 0!==e[t]&&(r[t]=e[t]);return{data:r}}var a=t(85663),i=t(13581),o=t(7462);let u={adapter:function(e){return{createUser:({id:r,...t})=>e.user.create(n(t)),getUser:r=>e.user.findUnique({where:{id:r}}),getUserByEmail:r=>e.user.findUnique({where:{email:r}}),async getUserByAccount(r){let t=await e.account.findUnique({where:{provider_providerAccountId:r},include:{user:!0}});return t?.user??null},updateUser:({id:r,...t})=>e.user.update({where:{id:r},...n(t)}),deleteUser:r=>e.user.delete({where:{id:r}}),linkAccount:r=>e.account.create({data:r}),unlinkAccount:r=>e.account.delete({where:{provider_providerAccountId:r}}),async getSessionAndUser(r){let t=await e.session.findUnique({where:{sessionToken:r},include:{user:!0}});if(!t)return null;let{user:s,...n}=t;return{user:s,session:n}},createSession:r=>e.session.create(n(r)),updateSession:r=>e.session.update({where:{sessionToken:r.sessionToken},...n(r)}),deleteSession:r=>e.session.delete({where:{sessionToken:r}}),async createVerificationToken(r){let t=await e.verificationToken.create(n(r));return"id"in t&&t.id&&delete t.id,t},async useVerificationToken(r){try{let t=await e.verificationToken.delete({where:{identifier_token:r}});return"id"in t&&t.id&&delete t.id,t}catch(e){if(e instanceof s.Prisma.PrismaClientKnownRequestError&&"P2025"===e.code)return null;throw e}},getAccount:async(r,t)=>e.account.findFirst({where:{providerAccountId:r,provider:t}}),createAuthenticator:async r=>e.authenticator.create(n(r)),getAuthenticator:async r=>e.authenticator.findUnique({where:{credentialID:r}}),listAuthenticatorsByUserId:async r=>e.authenticator.findMany({where:{userId:r}}),updateAuthenticatorCounter:async(r,t)=>e.authenticator.update({where:{credentialID:r},data:{counter:t}})}}(o.db),session:{strategy:"jwt"},pages:{signIn:"/login",signOut:"/",error:"/login"},providers:[(0,i.A)({name:"credentials",credentials:{email:{label:"Email",type:"email"},password:{label:"Password",type:"password"}},async authorize(e){if(!e?.email||!e?.password)throw Error("Invalid credentials");let r=await o.db.user.findUnique({where:{email:e.email}});if(!r||!r.password)throw Error("User not found");if(!await (0,a.UD)(e.password,r.password))throw Error("Invalid password");return{id:r.id,email:r.email,name:r.name}}})],callbacks:{session:async({session:e,token:r})=>(e.user&&r.sub&&(e.user.id=r.sub),e),jwt:async({token:e,user:r})=>(r&&(e.sub=r.id),e)},secret:process.env.NEXTAUTH_SECRET},d=u},96330:e=>{"use strict";e.exports=require("@prisma/client")},96487:()=>{}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[4243,580,5663],()=>t(58864));module.exports=s})();