(()=>{var e={};e.id=1612,e.ids=[1612],e.modules={3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},7462:(e,r,s)=>{"use strict";s.d(r,{db:()=>a});var t=s(96330);let a=globalThis.prisma||new t.PrismaClient},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},55511:e=>{"use strict";e.exports=require("crypto")},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},78335:()=>{},92149:(e,r,s)=>{"use strict";s.r(r),s.d(r,{patchFetch:()=>x,routeModule:()=>p,serverHooks:()=>m,workAsyncStorage:()=>c,workUnitAsyncStorage:()=>g});var t={};s.r(t),s.d(t,{POST:()=>d});var a=s(96559),i=s(48088),o=s(37719),n=s(32190),u=s(85663),l=s(7462);async function d(e){try{let{type:r,consent:s,credentials:t,profile:a}=await e.json();if(!t||!t.email||!t.password)return n.NextResponse.json({error:"Email and password are required"},{status:400});if(await l.db.user.findUnique({where:{email:t.email}}))return n.NextResponse.json({error:"User with this email already exists"},{status:400});let i=await (0,u.tW)(t.password,10);if("self"===r){let e=await l.db.user.create({data:{email:t.email,name:a.name,password:i,selfProfile:{create:{consent:s,name:a.name,age:a.age,sex:a.sex,diagnosis:a.diagnosis,seekingDiagnosis:a.seekingDiagnosis,challenges:a.challenges,location:a.location}}}});return n.NextResponse.json({message:"Self profile created successfully",userId:e.id},{status:201})}if("caretaker"!==r)return n.NextResponse.json({error:"Invalid profile type"},{status:400});{let e=await l.db.user.create({data:{email:t.email,name:a.name,password:i,caretakerProfile:{create:{lovedOnesCount:a.lovedOnesCount,diagnosisStatus:a.diagnosisStatus,attendsSchool:a.attendsSchool,receivesServices:a.receivesServices}}}});return n.NextResponse.json({message:"Caretaker profile created successfully",userId:e.id},{status:201})}}catch(e){return console.error("Registration error:",e),n.NextResponse.json({error:"Error creating user"},{status:500})}}let p=new a.AppRouteRouteModule({definition:{kind:i.RouteKind.APP_ROUTE,page:"/api/auth/register/route",pathname:"/api/auth/register",filename:"route",bundlePath:"app/api/auth/register/route"},resolvedPagePath:"/Users/georgiaeick/Downloads/smiles-for-speech/app/api/auth/register/route.ts",nextConfigOutput:"",userland:t}),{workAsyncStorage:c,workUnitAsyncStorage:g,serverHooks:m}=p;function x(){return(0,o.patchFetch)({workAsyncStorage:c,workUnitAsyncStorage:g})}},96330:e=>{"use strict";e.exports=require("@prisma/client")},96487:()=>{}};var r=require("../../../../webpack-runtime.js");r.C(e);var s=e=>r(r.s=e),t=r.X(0,[4243,580,5663],()=>s(92149));module.exports=t})();