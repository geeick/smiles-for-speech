(()=>{var e={};e.id=4092,e.ids=[4092],e.modules={3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},19815:(e,t,r)=>{"use strict";r.r(t),r.d(t,{patchFetch:()=>m,routeModule:()=>p,serverHooks:()=>x,workAsyncStorage:()=>d,workUnitAsyncStorage:()=>l});var s={};r.r(s),r.d(s,{GET:()=>c});var n=r(96559),o=r(48088),a=r(37719),i=r(32190),u=r(79464);async function c(){try{let e=await u.z.SelfProfile.count({where:{consent:!0}}),t=await u.z.LovedOne.count({where:{consent:!0}});return i.NextResponse.json({selfProfileCount:e,lovedOnesCount:t})}catch(e){return console.error("Error fetching consented counts:",e),i.NextResponse.json({error:"Failed to fetch consented counts"},{status:500})}}let p=new n.AppRouteRouteModule({definition:{kind:o.RouteKind.APP_ROUTE,page:"/api/admin/consented-counts/route",pathname:"/api/admin/consented-counts",filename:"route",bundlePath:"app/api/admin/consented-counts/route"},resolvedPagePath:"/Users/georgiaeick/Downloads/smiles-for-speech/app/api/admin/consented-counts/route.ts",nextConfigOutput:"",userland:s}),{workAsyncStorage:d,workUnitAsyncStorage:l,serverHooks:x}=p;function m(){return(0,a.patchFetch)({workAsyncStorage:d,workUnitAsyncStorage:l})}},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},78335:()=>{},79464:(e,t,r)=>{"use strict";r.d(t,{z:()=>n});var s=r(96330);let n=global.prisma??new s.PrismaClient({log:[]})},96330:e=>{"use strict";e.exports=require("@prisma/client")},96487:()=>{}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[4243,580],()=>r(19815));module.exports=s})();